// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"

	"github.com/L-LYR/pns/internal/model"
	"github.com/L-LYR/pns/internal/service/internal/dao/internal"
	"github.com/L-LYR/pns/internal/service/internal/do"
	"github.com/gogf/gf/v2/encoding/gjson"
)

// messageTemplateDao is the data access object for table message_template.
// You can define custom methods on it to extend its functionality as you wish.
type messageTemplateDao struct {
	*internal.MessageTemplateDao
}

var (
	// MessageTemplate is globally public accessible object for table message_template operations.
	MessageTemplate = messageTemplateDao{
		internal.NewMessageTemplateDao(),
	}
)

// Fill with you ideas below.

func CreateMessageTemplate(ctx context.Context, tpl *model.MsgTpl) error {
	_, err := MessageTemplate.Ctx(ctx).Insert(
		do.MessageTemplate{
			AppId:      tpl.AppId,
			TemplateId: tpl.ID,
			Template:   gjson.New(tpl.Template),
		},
	)
	return err
}

// only used in cache
func QueryMessageTemplate(ctx context.Context, templateId int64) (*model.MsgTpl, error) {
	record, err := MessageTemplate.Ctx(ctx).Where("templateId", templateId).One()
	if err != nil {
		return nil, err
	}
	result := &model.MsgTpl{}
	if err := record.Struct(result); err != nil {
		return nil, err
	}
	return result, nil
}
