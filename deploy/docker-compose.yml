version: "3.10"

services:

  pns:
    image: ${pns_image_name}
    container_name: pns
    depends_on:
      - mysql
      - mongodb
      - redis
      - mosquitto
    build:
      context: ..
      dockerfile: ${pns_dockerfile}
      args:
        root_path: ${root_path}
    ports:
      - 10086:10086
      - 10087:10087
      - 10088:10088
    volumes:
      - ${pns_log_volume}:/pns/log
    restart: always
    networks:
      - pns_net

  mongodb:
    image: "mongo:5.0"
    container_name: "pns_mongo"
    environment:
      - TZ=${TZ}
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${db_root_pass}
    ports:
      - 27017:27017
    volumes:
      - ${pns_mongo_volume}:/data/db
      - ./pns_mongo_init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: always
    networks:
      - pns_net

  mysql:
    image: "mysql:8.0-oracle"
    container_name: "pns_mysql"
    environment:
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${db_root_pass}
    ports:
      - 3306:3306
    volumes:
      - ${pns_mysql_volume}:/var/lib/mysql
      - ./pns_mysql.cnf:/etc/my.cnf
      - ./pns_mysql_init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - pns_net

  redis:
    image: "redis:7.0-rc"
    container_name: "pns_redis"
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass ${db_root_pass}
    volumes:
      - ${pns_redis_volume}:/data
    restart: always
    networks:
      - pns_net

  prometheus:
    image: "prom/prometheus:v2.32.0"
    container_name: "pns_metrics"
    ports:
      - 9090:9090
    volumes:
      - ${pns_prometheus_volume}:/prometheus
      - ./pns_prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=48h'
      - '--web.enable-lifecycle'
    restart: always
    networks:
      - pns_net

  grafana:
    image: "grafana/grafana:8.4.3"
    container_name: "pns_monitor"
    environment:
      - GF_SECURITY_ADMIN_USER=root
      - GF_SECURITY_ADMIN_PASSWORD=${db_root_pass}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
    user: "472"
    ports:
      - 3000:3000
    volumes:
      - ${pns_grafana_volume}:/var/lib/grafana
      - ${pns_grafana_provisioning}:/etc/grafana/provisioning
    restart: always
    networks:
      - pns_net

  mosquitto:
    image: "iegomez/mosquitto-go-auth:latest-mosquitto_2.0.14"
    container_name: "pns_mqtt_broker"
    depends_on:
      - mysql
    ports:
      - 18830:1883
    volumes:
      - ./pns_mosquitto_entrypoint.sh:/mosquitto/init.sh
      - ./pns_mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ${pns_mosquitto_volume}/data:/mosquitto/data
      - ${pns_mosquitto_volume}/log:/mosquitto/log
    restart: always
    entrypoint: [ "sh", "/mosquitto/init.sh" ]
    networks:
      - pns_net

networks:
  pns_net:
    name: pns_net
